=============================
How to use 3-say_my_name Module
==============================

This is a simple module that defines a function that prints first name and last name

Functions
=============
This module contains only one function,
``3-say_my_name``

Prototype: def say_my_name(first_name, last_name)

Usage of ``3-say_my_name``
======================
``say_my_name(...)``` returns the full name.
---------------------

First, import this module 
>>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("John", "Smith")
    My name is John Smith

The function can receive a parameter followed by a space

::
    >>> say_my_name("John")
    My name is John 

If the function receives an empty string it will read as a space 

::
    >>> say_my_name("", "Carlos")
    My name is  Carlos

    >>> say_my_name("Bob", "")
    My name is Bob 

The show gets some kind of casting str 

::
    >>> say_my_name(str('Holberton'), "School")
    My name is Holberton School

    >>> say_my_name(str(27), "School")
    My name is 27 School

    >>> say_my_name(str(2.732323244), str(.9))
    My name is 2.732323244 0.9


>>> say_my_name("")
My name is  


>>> say_my_name("", "")
My name is  


""" ERRORS """


>>> say_my_name(3, "White")
Traceback (most recent call last):
...
TypeError: first_name must be a string


>>> say_my_name("Walter", 3)
Traceback (most recent call last):
...
TypeError: last_name must be a string


>>> say_my_name(, )
Traceback (most recent call last):
...
SyntaxError: invalid syntax


>>> say_my_name( )
Traceback (most recent call last):
...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'
